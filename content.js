// Add JavaScript for content that is already on the tab e.g. accessing existing page elements

const FILTERED_IMAGE_COUNT = 5;
const FILTERED_IMAGE_HEIGHT = 0;
const FILTERED_IMAGE_WIDTH = 0;

const imagesSrcSet = new Set();

var filteredImageCount = 0;

// Detects changes in DOM (for lazy-loading purposes)
var observer = new MutationObserver(function (mutations) {
    mutations.forEach(function (mutation) {
        if (mutation.type == 'attributes' && mutation.attributeName == 'role') {
            scanPageForImages();
        }
    });
});

var config = { attributes: true, childList: false, subtree: true }

chrome.runtime.sendMessage({ todo: "showPageAction" });

window.addEventListener('load', (event) => {
    // On page load, start tracking for DOM changes (in case of lazy-loading) and do an initial scan for images
    observer.observe(document.querySelector('html'), config);
    scanPageForImages();
});

function scanPageForImages() {
    var allImages = document.querySelectorAll("img");

    for (var i = 0; i < allImages.length; i++) {
        if (filteredImageCount >= FILTERED_IMAGE_COUNT) {
            // if threshold has been hit, disconnect the observer to save resources
            observer?.disconnect();
            break;
        }

        if ((allImages[i].alt == null || allImages[i].alt.length == 0 || allImages[i].alt == "Image")
            && allImages[i].height > FILTERED_IMAGE_HEIGHT
            && allImages[i].width > FILTERED_IMAGE_WIDTH
            && !imagesSrcSet.has(allImages[i].currentSrc)) {
            console.log(allImages[i]);
            allImages[i].alt = "Generated by alto";
            imagesSrcSet.add(allImages[i].currentSrc);
            filteredImageCount++;
        }
    }
}